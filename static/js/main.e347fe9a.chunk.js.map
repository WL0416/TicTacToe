{"version":3,"sources":["data/ws_conf.xml","data/context.jsx","static/image/tic_tac_toe.png","views/layout/Header/Header.jsx","static/image/K_logo.png","views/layout/Contact/Contact.jsx","views/layout/PopUp/PopUp.jsx","views/layout/Footer/Footer.jsx","views/layout/MainContent/MainContent.jsx","views/pages/Home/Home.jsx","views/pages/Game/SetName.jsx","views/pages/Game/SetGameType.jsx","utils/rand_to_fro.js","utils/rand_arr_elem.js","utils/Socket/Socket.jsx","utils/SocketClient/SocketClient.jsx","utils/simplePost.js","views/pages/Game/GamePlay.jsx","views/pages/Game/Game.jsx","App.js","reportWebVitals.js","index.js"],"names":["Context","React","createContext","Parser","xml2js","Provider","props","useState","siteContent","setSiteContent","name","setName","gameStep","setGameStep","gameType","setGameType","gamePlay","setGamePlay","gameBoard","setGameBoard","nextTurnPlay","setNextTurnPlay","gameStat","setGameStat","playerType","setPlayerType","playerSocket","setPlayerSocket","playerNumber","setPlayerNumber","gameRoom","setGameRoom","win","setWin","useEffect","axios","get","XMLData","then","response","parseString","data","err","result","value","children","Consumer","Header","headerContent","mainMenu","headLogo","head_l_logo","$","siteTitle","site_title","menu","pages","p","id","className","to","u","src","Logo","alt","txt","map","i","ico","aria-hidden","Contact","contactApi","unsent","setUnsent","sending","setSending","sent","setSent","sentErr","setSentErr","nameValid","setNameValid","emailValid","setEmailValid","subjectValid","setSubjectValid","messageValid","setMessageValid","email","setEmail","subject","setSubject","message","setMessage","sendingCopy","sendingErr","sentCopy","form","onSubmit","e","preventDefault","n","trim","s","m","validName","length","validEmail","validator","isEmail","validSubject","validMessage","checkForm","post","status","error","method","goodclasses","badclasses","isvalid","toString","type","placeholder","onChange","target","required","FieldHolder","currentClasses","newProps","Object","assign","PopUp","popupTitle","popupContent","trigger","modal","nested","close","onClick","pg_name","dangerouslySetInnerHTML","__html","_","Footer","footerContent","termsAndConditions","privacy","footMsg","foot_msg","items","footRLogo","foot_r_logo","it","tp","href","t","rel","logo","MainContent","Home","homeContent","pgName","buttons","btns","b","SetName","useContext","setGameStepValue","nameValue","setNameValue","SetGameType","setGameTypeValue","rand_to_fro","mx","mn","Math","floor","random","rand_arr_elem","a","Socket","url","setGamePlayValue","setGameBoardValue","setNextTurnPlayValue","setGameStatValue","setWinValue","socket","W3CWebSocket","onopen","console","log","onclose","onmessage","JSON","parse","board","onerror","SocketClient","clients","playerTypeValue","setPlayerTypeValue","playerNumberValue","setPlayerNumberValue","gamePlayValue","gameRoomValue","setGameRoomValue","wslen","roomNumber","info","prefixWS","simplePost","catch","GamePlay","winSets","refsGroup","useRef","gameTypeValue","gameBoardValue","nextTurnPlayValue","gameStatValue","playerSocketValue","setPlayerSocketValue","winValue","checkWin","renderWinGrid","getWebSocketClients","values","gsap","from","duration","display","opacity","scaleX","scaleY","ease","x","y","clickCell","cellId","substr","playerTurn","liveCheckTurn","checkTurn","exchangeData","set","each","forEach","r","current","fin","setTimeout","empty_cells_arr","push","c","compTurn","cellCont","ref","Game","gameStepValue","App","undefined","header","main_menu","exact","path","component","pgs","home","footer","terms_and_conditions","privacy_policy","loc","SCRIPT__contact_form","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e347fe9a.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/ws_conf.05aa5998.xml\";","import React, { useState, useEffect } from \"react\";\r\nimport XMLData from \"./ws_conf.xml\";\r\nimport axios from \"axios\";\r\nimport xml2js from \"xml2js\";\r\n\r\nexport const Context = React.createContext();\r\nconst Parser = new xml2js.Parser();\r\n\r\nconst Provider = (props) => {\r\n  const [siteContent, setSiteContent] = useState({});\r\n  const [name, setName] = useState(\"\");\r\n  const [gameStep, setGameStep] = useState(\"set_name\");\r\n  const [gameType, setGameType] = useState(\"\");\r\n  const [gamePlay, setGamePlay] = useState(false);\r\n  const [gameBoard, setGameBoard] = useState({});\r\n  const [nextTurnPlay, setNextTurnPlay] = useState(true);\r\n  const [gameStat, setGameStat] = useState(\"\");\r\n  const [playerType, setPlayerType] = useState(\"x\");\r\n  const [playerSocket, setPlayerSocket] = useState(null);\r\n  const [playerNumber, setPlayerNumber] = useState(0);\r\n  const [gameRoom, setGameRoom] = useState(\"1\");\r\n  const [win, setWin] = useState(false);\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(XMLData, {\r\n        \"Content-Type\": \"application/xml; charset=utf-8\",\r\n      })\r\n      .then((response) => {\r\n        Parser.parseString(response.data, (err, result) => {\r\n          setSiteContent(result);\r\n        });\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    <Context.Provider\r\n      value={{\r\n        siteContent: [siteContent, setSiteContent],\r\n        name: [name, setName],\r\n        gameStep: [gameStep, setGameStep],\r\n        gameType: [gameType, setGameType],\r\n        gameBoard: [gameBoard, setGameBoard],\r\n        gamePlay: [gamePlay, setGamePlay],\r\n        nextTurnPlay: [nextTurnPlay, setNextTurnPlay],\r\n        gameStat: [gameStat, setGameStat],\r\n        playerType: [playerType, setPlayerType],\r\n        playerSocket: [playerSocket, setPlayerSocket],\r\n        playerNumber: [playerNumber, setPlayerNumber],\r\n        gameRoom: [gameRoom, setGameRoom],\r\n        win: [win, setWin],\r\n      }}\r\n    >\r\n      {props.children}\r\n    </Context.Provider>\r\n  );\r\n};\r\n\r\nexport default Provider;\r\nexport const Consumer = Context.Consumer;\r\n","export default __webpack_public_path__ + \"static/media/tic_tac_toe.5421b5a0.png\";","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport Logo from \"../../../static/image/tic_tac_toe.png\";\r\n\r\nconst Header = (props) => {\r\n  const { headerContent, mainMenu } = props;\r\n\r\n  const headLogo = headerContent[0].head_l_logo[0].$;\r\n  const siteTitle = headerContent[0].site_title[0].$;\r\n  const menu = mainMenu[0].pages[0].p;\r\n\r\n  // console.log(headLogo, siteTitle, menu);\r\n\r\n  return (\r\n    <header id=\"main_header\">\r\n      <div id=\"brand\">\r\n        <div className=\"container\">\r\n          <Link to={headLogo.u} className=\"logo-tl\">\r\n            <img src={Logo} alt=\"logo\" />\r\n          </Link>\r\n          <Link to={siteTitle.u} className=\"main-site-name\">\r\n            {siteTitle.txt}\r\n          </Link>\r\n\r\n          <nav>\r\n            <ul>\r\n              {menu.map(function (p, i) {\r\n                return (\r\n                  <li key={i}>\r\n                    <Link to={p.$.u}>\r\n                      <i\r\n                        className={\"fa fa-2x \" + p.$.ico}\r\n                        aria-hidden=\"true\"\r\n                      ></i>\r\n                      {p.$.name}\r\n                    </Link>\r\n                  </li>\r\n                );\r\n              })}\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </header>\r\n  );\r\n};\r\n\r\nHeader.propTypes = {\r\n  headerContent: PropTypes.any.isRequired,\r\n  mainMenu: PropTypes.any,\r\n};\r\n\r\nexport default Header;\r\n","export default __webpack_public_path__ + \"static/media/K_logo.2165522f.png\";","import React, { useState } from \"react\";\r\nimport validator from \"validator\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\n\r\nconst Contact = (props) => {\r\n  const { contactApi } = props;\r\n  const [unsent, setUnsent] = useState(true);\r\n  const [sending, setSending] = useState(false);\r\n  const [sent, setSent] = useState(false);\r\n  const [sentErr, setSentErr] = useState(false);\r\n  const [nameValid, setNameValid] = useState(true);\r\n  const [emailValid, setEmailValid] = useState(true);\r\n  const [subjectValid, setSubjectValid] = useState(true);\r\n  const [messageValid, setMessageValid] = useState(true);\r\n  const [name, setName] = useState(\"\");\r\n  const [email, setEmail] = useState(\"\");\r\n  const [subject, setSubject] = useState(\"\");\r\n  const [message, setMessage] = useState(\"\");\r\n\r\n  const checkForm = () => {\r\n    const n = name.trim();\r\n    const e = email.trim();\r\n    const s = subject.trim();\r\n    const m = message.trim();\r\n\r\n    const validName = n.length > 0;\r\n    const validEmail = validator.isEmail(e);\r\n    const validSubject = s.length > 0;\r\n    const validMessage = m.length > 0;\r\n\r\n    setNameValid(validName);\r\n    setEmailValid(validEmail);\r\n    setSubjectValid(validSubject);\r\n    setMessageValid(validMessage);\r\n\r\n    return validName && validEmail && validSubject && validMessage;\r\n  };\r\n\r\n  const onNameChange = (e) => {\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const onEmailChange = (e) => {\r\n    setEmail(e.target.value);\r\n  };\r\n\r\n  const onSubjectChange = (e) => {\r\n    setSubject(e.target.value);\r\n  };\r\n\r\n  const onMessageChange = (e) => {\r\n    setMessage(e.target.value);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const isValid = checkForm();\r\n\r\n    if (isValid) {\r\n      setUnsent(false);\r\n      setSending(true);\r\n      axios\r\n        .post(contactApi, {\r\n          name,\r\n          email,\r\n          subject,\r\n          message,\r\n        })\r\n        .then(\r\n          (response) => {\r\n            // console.log(response);\r\n            setSending(false);\r\n            setSent(true);\r\n            if (response.status !== 200) setSentErr(true);\r\n          },\r\n          (error) => {\r\n            setSending(false);\r\n            setSent(true);\r\n            setSentErr(true);\r\n          }\r\n        );\r\n    }\r\n  };\r\n\r\n  const sendingCopy = (\r\n    <div>I am sending your message over the wire.......... please hold.</div>\r\n  );\r\n\r\n  const sendingErr = (\r\n    <div>There was an error sending your request. Please try again</div>\r\n  );\r\n\r\n  const sentCopy = (\r\n    <div>\r\n      <strong>\r\n        Okay we got your message, we will be touching base shortly.\r\n      </strong>\r\n    </div>\r\n  );\r\n\r\n  const form = (\r\n    <form id=\"contact_form\" onSubmit={handleSubmit} method=\"POST\">\r\n      <FieldHolder\r\n        goodclasses=\"input_holder left\"\r\n        badclasses=\"error\"\r\n        isvalid={nameValid.toString()}\r\n      >\r\n        <label>\r\n          Name <span className=\"required\">is a required field</span>\r\n        </label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input name\"\r\n          placeholder=\"Name\"\r\n          value={name}\r\n          onChange={onNameChange}\r\n          required\r\n        />\r\n      </FieldHolder>\r\n\r\n      <FieldHolder\r\n        goodclasses=\"input_holder left\"\r\n        badclasses=\"error\"\r\n        isvalid={emailValid.toString()}\r\n      >\r\n        <label>\r\n          Email <span className=\"required\">is a required field</span>\r\n        </label>\r\n        <input\r\n          type=\"email\"\r\n          className=\"input name\"\r\n          placeholder=\"Your Email\"\r\n          value={email}\r\n          onChange={onEmailChange}\r\n          required\r\n        />\r\n      </FieldHolder>\r\n\r\n      <FieldHolder\r\n        goodclasses=\"input_holder select_option\"\r\n        badclasses=\"error\"\r\n        isvalid={subjectValid.toString()}\r\n      >\r\n        <label>\r\n          Subject <span className=\"required\">is a required field</span>\r\n        </label>\r\n        <select onChange={onSubjectChange} required>\r\n          <option value={subject}>Choose one</option>\r\n          <option>Join / Login</option>\r\n          <option>An issue with the website</option>\r\n          <option>Other</option>\r\n        </select>\r\n      </FieldHolder>\r\n\r\n      <FieldHolder\r\n        goodclasses=\"input_holder clear message\"\r\n        badclasses=\"error\"\r\n        isvalid={messageValid.toString()}\r\n      >\r\n        <label>\r\n          Message <span className=\"required\">is a required field</span>\r\n        </label>\r\n        <textarea\r\n          className=\"input textarea\"\r\n          value={message}\r\n          onChange={onMessageChange}\r\n          required\r\n        ></textarea>\r\n      </FieldHolder>\r\n\r\n      <button type=\"submit\" className=\"button\">\r\n        <span>\r\n          SEND <span className=\"fa fa-caret-right\"></span>\r\n        </span>\r\n      </button>\r\n      <p className=\"disclaimer\">\r\n        Any personal information collected in this contact form is so that we\r\n        can send you the information you have requested. It will not be used for\r\n        any other reason.\r\n      </p>\r\n    </form>\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {unsent && form}\r\n      {sending && sendingCopy}\r\n      {sent && !sentErr && sentCopy}\r\n      {sent && sentErr && sendingErr}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Contact;\r\n\r\nexport const FieldHolder = (props) => {\r\n  const { isvalid, goodclasses, badclasses } = props;\r\n  const currentClasses = isvalid ? goodclasses : goodclasses + \" \" + badclasses;\r\n  const newProps = Object.assign({}, props, { className: currentClasses });\r\n  return <div {...newProps}>{props.children}</div>;\r\n};\r\n\r\nFieldHolder.propTypes = {\r\n  children: PropTypes.any,\r\n  isvalid: PropTypes.string,\r\n  goodclasses: PropTypes.string.isRequired,\r\n  badclasses: PropTypes.string.isRequired,\r\n};\r\n\r\nContact.propTypes = {\r\n  contactApi: PropTypes.string.isRequired,\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Popup from \"reactjs-popup\";\r\nimport \"reactjs-popup/dist/index.css\";\r\nimport Contact from \"../Contact\";\r\n\r\nconst PopUp = (props) => {\r\n  const { popupTitle, popupContent } = props;\r\n\r\n  //  console.log(popupTitle, popupContent);\r\n\r\n  /* eslint-disable */\r\n  return (\r\n    <Popup trigger={<a>{popupTitle}</a>} modal nested>\r\n      {(close) => {\r\n        if (popupTitle === \"contact us\")\r\n          return (\r\n            <div className=\"modal\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n              </button>\r\n              <div className=\"header\">CONTACT US </div>\r\n              <div className=\"content\">\r\n                <div className=\"container\">\r\n                  <Contact contactApi={popupContent} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n        else\r\n          return (\r\n            <div className=\"modal\">\r\n              <button className=\"close\" onClick={close}>\r\n                &times;\r\n              </button>\r\n              <div className=\"header\">{popupContent.$.pg_name} </div>\r\n              <div className=\"content\">\r\n                <div className=\"container\">\r\n                  <div dangerouslySetInnerHTML={{ __html: popupContent._ }} />\r\n                </div>\r\n              </div>\r\n            </div>\r\n          );\r\n      }}\r\n    </Popup>\r\n  );\r\n};\r\n/* eslint-disable */\r\nPopUp.propTypes = {\r\n  pageTitle: PropTypes.string,\r\n  popupContent: PropTypes.any,\r\n};\r\n\r\nexport default PopUp;\r\n","import React from \"react\";\r\n// import { Link } from \"react-router-dom\";\r\nimport PropTypes from \"prop-types\";\r\nimport logo from \"../../../static/image/K_logo.png\";\r\nimport PopUp from \"../PopUp\";\r\n// import Contact from \"../Contact\";\r\n\r\nconst Footer = (props) => {\r\n  const { footerContent, termsAndConditions, privacy, contactApi } = props;\r\n\r\n  //   console.log(termsAndConditions, privacy);\r\n\r\n  const footMsg = footerContent[0].foot_msg[0].$;\r\n  const items = footerContent[0].items[0].i;\r\n  const footRLogo = footerContent[0].foot_r_logo[0].$;\r\n\r\n  //   console.log(footMsg, items, footRLogo);\r\n\r\n  return (\r\n    <footer>\r\n      <div className=\"container\">\r\n        <nav>\r\n          <ul>\r\n            {items.map((it, i) => {\r\n              if (it.$.tp === \"ln\") {\r\n                switch (it.$.txt) {\r\n                  case \"terms and conditions\":\r\n                    return (\r\n                      <li key={i}>\r\n                        <PopUp\r\n                          popupTitle={it.$.txt}\r\n                          popupContent={termsAndConditions}\r\n                        ></PopUp>\r\n                      </li>\r\n                    );\r\n                  case \"privacy\":\r\n                    return (\r\n                      <li key={i}>\r\n                        <PopUp\r\n                          popupTitle={it.$.txt}\r\n                          popupContent={privacy}\r\n                        ></PopUp>\r\n                      </li>\r\n                    );\r\n                  case \"contact us\":\r\n                    return (\r\n                      <li key={i}>\r\n                        <PopUp\r\n                          popupTitle={it.$.txt}\r\n                          popupContent={contactApi}\r\n                        ></PopUp>\r\n                      </li>\r\n                    );\r\n                  default:\r\n                    return null;\r\n                }\r\n              } else {\r\n                return <li key={i}>{it.$.txt}</li>;\r\n              }\r\n            })}\r\n          </ul>\r\n        </nav>\r\n\r\n        <div className=\"foot_message\"> {footMsg.txt} </div>\r\n\r\n        <a\r\n          className=\"foot-r-logo\"\r\n          href={footRLogo.u}\r\n          target={footRLogo.t}\r\n          rel=\"noopener noreferrer\"\r\n        >\r\n          <img alt=\"footer logo\" src={logo} />\r\n        </a>\r\n      </div>\r\n    </footer>\r\n  );\r\n};\r\n\r\nFooter.propTypes = {\r\n  footerContent: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MainContent = (props) => {\r\n  return (\r\n    <div id=\"main_content\">\r\n      <div className=\"main_container\">{props.children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nMainContent.propTypes = {\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport default MainContent;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = (props) => {\r\n  const { homeContent } = props;\r\n\r\n  const pgName = homeContent.$.pg_name;\r\n  const buttons = homeContent.btns;\r\n  const txt = homeContent.txt[0];\r\n  // console.log(pgName, buttons, txt);\r\n\r\n  return (\r\n    <div id=\"Txt_page\">\r\n      <div id=\"page-container\">\r\n        <h1>{pgName}</h1>\r\n\r\n        <div dangerouslySetInnerHTML={{ __html: txt }} />\r\n\r\n        <div className=\"btns\">\r\n          {buttons.map(function (b, i) {\r\n            return (\r\n              <Link to={b.b[0].$.u} key={i}>\r\n                <button type=\"submit\" className=\"button\">\r\n                  <span>\r\n                    {b.b[0].$.txt} <span className=\"fa fa-caret-right\"></span>\r\n                  </span>\r\n                </button>\r\n              </Link>\r\n            );\r\n          })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nHome.propTypes = {\r\n  homeContent: PropTypes.any.isRequired,\r\n};\r\n\r\nexport default Home;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../../../data/context\";\r\n\r\nconst SetName = () => {\r\n  const { name, gameStep } = useContext(Context);\r\n  // eslint-disable-next-line\r\n  const [gameStepValue, setGameStepValue] = gameStep;\r\n  const [nameValue, setNameValue] = name;\r\n\r\n  const saveName = (e) => {\r\n    e.preventDefault();\r\n    if (nameValue.length > 0) setGameStepValue(\"set_game_type\");\r\n    // console.log(\"save name\", gameStepValue, nameValue);\r\n  };\r\n\r\n  const onName = (e) => {\r\n    e.preventDefault();\r\n    setNameValue(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <div id=\"SetName\">\r\n      <h1>Set Name</h1>\r\n      <form onSubmit={saveName}>\r\n        <div className=\"input_holder left\">\r\n          {\" \"}\r\n          <label>Name </label>\r\n          <input\r\n            type=\"text\"\r\n            className=\"input name\"\r\n            placeholder=\"Name\"\r\n            onChange={onName}\r\n            required\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"button\">\r\n          <span>\r\n            SAVE <span className=\"fa fa-caret-right\"></span>\r\n          </span>\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetName;\r\n","import React, { useContext } from \"react\";\r\nimport { Context } from \"../../../data/context\";\r\n\r\nconst SetGameType = () => {\r\n  const { gameType, gameStep } = useContext(Context);\r\n\r\n  // eslint-disable-next-line\r\n  const [gameTypeValue, setGameTypeValue] = gameType;\r\n  // eslint-disable-next-line\r\n  const [gameStepValue, setGameStepValue] = gameStep;\r\n\r\n  //   console.log(gameTypeValue);\r\n\r\n  const setGameLive = () => {\r\n    setGameTypeValue(\"live\");\r\n    setGameStepValue(\"start_game\");\r\n  };\r\n\r\n  const setGameComp = () => {\r\n    setGameTypeValue(\"comp\");\r\n    setGameStepValue(\"start_game\");\r\n  };\r\n\r\n  return (\r\n    <div id=\"SetGameType\">\r\n      <h1>Choose game type</h1>\r\n      <button type=\"button\" onClick={setGameLive} className=\"button long\">\r\n        <span>\r\n          Live against another player{\" \"}\r\n          <span className=\"fa fa-caret-right\"></span>\r\n        </span>\r\n      </button>\r\n      &nbsp;&nbsp;&nbsp;&nbsp;\r\n      <button type=\"button\" onClick={setGameComp} className=\"button long\">\r\n        <span>\r\n          Against a computer <span className=\"fa fa-caret-right\"></span>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetGameType;\r\n","const rand_to_fro = function (mx, mn = 0) {\r\n  return Math.floor(Math.random() * (mx - mn + 1)) + mn;\r\n};\r\n\r\nexport default rand_to_fro;\r\n","import rand_to_fro from \"./rand_to_fro\";\r\n\r\nconst rand_arr_elem = function (a) {\r\n  return a ? a[rand_to_fro(a.length - 1)] : null;\r\n};\r\n\r\nexport default rand_arr_elem;\r\n","import { w3cwebsocket as W3CWebSocket } from \"websocket\";\r\n\r\nconst Socket = (\r\n  url,\r\n  gamePlay,\r\n  name,\r\n  gameBoard,\r\n  nextTurnPlay,\r\n  gameStat,\r\n  win\r\n) => {\r\n  // eslint-disable-next-line\r\n  const [gamePlayValue, setGamePlayValue] = gamePlay;\r\n  const [nameValue] = name;\r\n  // eslint-disable-next-line\r\n  const [gameBoardValue, setGameBoardValue] = gameBoard;\r\n  // eslint-disable-next-line\r\n  const [nextTurnPlayValue, setNextTurnPlayValue] = nextTurnPlay;\r\n  // eslint-disable-next-line\r\n  const [gameStatValue, setGameStatValue] = gameStat;\r\n  // eslint-disable-next-line\r\n  const [winValue, setWinValue] = win;\r\n\r\n  const socket = new W3CWebSocket(url);\r\n\r\n  socket.onopen = () => {\r\n    console.log(\"socket is open\");\r\n  };\r\n\r\n  socket.onclose = () => {\r\n    console.log(\"socket is closed\");\r\n  };\r\n\r\n  socket.onmessage = (message) => {\r\n    const m = JSON.parse(message.data);\r\n    console.log(\"Message from server\", m);\r\n    if (m.name !== nameValue) {\r\n      setGameBoardValue(m.board);\r\n      if (!m.result[0] && !m.result[1]) {\r\n        setGameStatValue(\"Start Game\");\r\n        setGamePlayValue(true);\r\n        setNextTurnPlayValue(nextTurnPlay);\r\n      }\r\n\r\n      if (m.result[0]) {\r\n        setGameStatValue(\"Opponent Wins\");\r\n        setWinValue(true);\r\n      } else if (m.result[1]) {\r\n        setGameStatValue(\"Draw\");\r\n        setGamePlayValue(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  socket.onerror = (error) => {\r\n    console.log(error);\r\n  };\r\n\r\n  return socket;\r\n};\r\n\r\nexport default Socket;\r\n","import Socket from \"../Socket\";\r\nimport info from \"../../data/info.json\";\r\n\r\nconst SocketClient = (\r\n  clients,\r\n  playerType,\r\n  playerNumber,\r\n  gamePlay,\r\n  gameBoard,\r\n  gameRoom,\r\n  name,\r\n  nextTurnPlay,\r\n  gameStat,\r\n  win\r\n) => {\r\n  const [playerTypeValue, setPlayerTypeValue] = playerType;\r\n  const [playerNumberValue, setPlayerNumberValue] = playerNumber;\r\n  const [gamePlayValue, setGamePlayValue] = gamePlay;\r\n  const [gameRoomValue, setGameRoomValue] = gameRoom;\r\n\r\n  const wslen = clients.length;\r\n  let socket;\r\n  if (wslen > 0) {\r\n    if (clients[wslen - 1].length > 1) {\r\n      // new room\r\n      const roomNumber = (wslen + 1).toString();\r\n      socket = Socket(\r\n        `${info.prefixWS}${roomNumber}`,\r\n        gamePlay,\r\n        name,\r\n        gameBoard,\r\n        nextTurnPlay,\r\n        gameStat,\r\n        win\r\n      );\r\n      setGameRoomValue(roomNumber);\r\n      setPlayerNumberValue(playerNumberValue + wslen + 1);\r\n    } else {\r\n      // same room\r\n      const roomNumber = wslen.toString();\r\n      socket = Socket(\r\n        `${info.prefixWS}${wslen.toString()}`,\r\n        gamePlay,\r\n        name,\r\n        gameBoard,\r\n        nextTurnPlay,\r\n        gameStat,\r\n        win\r\n      );\r\n      setGameRoomValue(roomNumber);\r\n      playerTypeValue && setPlayerTypeValue(\"o\");\r\n      setPlayerNumberValue(playerNumberValue + wslen + 1);\r\n      setGamePlayValue(!gamePlayValue);\r\n    }\r\n  } else {\r\n    // first room\r\n    socket = Socket(\r\n      `${info.prefixWS}${gameRoomValue}`,\r\n      gamePlay,\r\n      name,\r\n      gameBoard,\r\n      nextTurnPlay,\r\n      gameStat,\r\n      win\r\n    );\r\n    setPlayerNumberValue(1);\r\n  }\r\n\r\n  return socket;\r\n};\r\n\r\nexport default SocketClient;\r\n","import axios from \"axios\";\r\n\r\nconst simplePost = (url, data) => {\r\n  axios\r\n    .post(url, { ...data })\r\n    .then((result) => {\r\n      console.log(result.data);\r\n    })\r\n    .catch((err) => {\r\n      console.log(err);\r\n    });\r\n};\r\n\r\nexport default simplePost;\r\n","import React, { useRef, useContext, useEffect } from \"react\";\r\n// import io from \"socket.io-client\";\r\nimport rand_arr_elem from \"../../../utils/rand_arr_elem\";\r\n// import rand_to_fro from \"../../../utils/rand_to_fro\";\r\nimport { Context } from \"../../../data/context\";\r\nimport gsap from \"gsap\";\r\nimport axios from \"axios\";\r\nimport info from \"../../../data/info.json\";\r\nimport SocketClient from \"../../../utils/SocketClient\";\r\nimport simplePost from \"../../../utils/simplePost\";\r\n\r\nconst GamePlay = () => {\r\n  const winSets = [\r\n    [\"c1\", \"c2\", \"c3\"],\r\n    [\"c4\", \"c5\", \"c6\"],\r\n    [\"c7\", \"c8\", \"c9\"],\r\n\r\n    [\"c1\", \"c4\", \"c7\"],\r\n    [\"c2\", \"c5\", \"c8\"],\r\n    [\"c3\", \"c6\", \"c9\"],\r\n\r\n    [\"c1\", \"c5\", \"c9\"],\r\n    [\"c3\", \"c5\", \"c7\"],\r\n  ];\r\n\r\n  const c1 = useRef();\r\n  const c2 = useRef();\r\n  const c3 = useRef();\r\n  const c4 = useRef();\r\n  const c5 = useRef();\r\n  const c6 = useRef();\r\n  const c7 = useRef();\r\n  const c8 = useRef();\r\n  const c9 = useRef();\r\n  let refsGroup = [c1, c2, c3, c4, c5, c6, c7, c8, c9];\r\n\r\n  const {\r\n    name,\r\n    gameType,\r\n    gameStep,\r\n    gameBoard,\r\n    gamePlay,\r\n    nextTurnPlay,\r\n    gameStat,\r\n    playerType,\r\n    playerSocket,\r\n    playerNumber,\r\n    gameRoom,\r\n    win,\r\n  } = useContext(Context);\r\n\r\n  const [nameValue, setNameValue] = name;\r\n\r\n  const [gameTypeValue, setGameTypeValue] = gameType;\r\n  // eslint-disable-next-line\r\n  const [gameStepValue, setGameStepValue] = gameStep;\r\n  const [gameBoardValue, setGameBoardValue] = gameBoard;\r\n  const [gamePlayValue, setGamePlayValue] = gamePlay;\r\n  const [nextTurnPlayValue, setNextTurnPlayValue] = nextTurnPlay;\r\n  const [gameStatValue, setGameStatValue] = gameStat;\r\n  const [playerTypeValue] = playerType;\r\n  const [playerSocketValue, setPlayerSocketValue] = playerSocket;\r\n  const [playerNumberValue, setPlayerNumberValue] = playerNumber;\r\n  const [gameRoomValue, setGameRoomValue] = gameRoom;\r\n  const [winValue, setWinValue] = win;\r\n\r\n  /* eslint-disable */\r\n  useEffect(() => {\r\n    if (gameTypeValue !== \"live\") {\r\n      setGamePlayValue(!gamePlayValue);\r\n      if (!gameStatValue) setGameStatValue(\"Start Game\");\r\n      checkWin(\r\n        winSets,\r\n        gameBoardValue,\r\n        setGameStatValue,\r\n        setGamePlayValue,\r\n        renderWinGrid,\r\n        playerTypeValue\r\n      );\r\n    } else {\r\n      if (!playerSocketValue) {\r\n        setGameStatValue(\"Connecting...\");\r\n        setGamePlayValue(false);\r\n        setGameStatValue(\"Waiting...\");\r\n        axios\r\n          .get(info.getWebSocketClients)\r\n          .then((response) => {\r\n            const clients = Object.values(response.data);\r\n            setPlayerSocketValue(\r\n              SocketClient(\r\n                clients,\r\n                playerType,\r\n                playerNumber,\r\n                gamePlay,\r\n                gameBoard,\r\n                gameRoom,\r\n                name,\r\n                nextTurnPlay,\r\n                gameStat,\r\n                win\r\n              )\r\n            );\r\n          })\r\n          .catch((err) => {\r\n            setGameStatValue(\"Something went wrong...\");\r\n            console.log(err);\r\n          });\r\n      }\r\n    }\r\n\r\n    gsap.from(\"#game_stat\", {\r\n      duration: 1,\r\n      display: \"none\",\r\n      opacity: 0,\r\n      scaleX: 0,\r\n      scaleY: 0,\r\n      ease: \"power4.in\",\r\n    });\r\n\r\n    gsap.from(\"#game_board\", {\r\n      duration: 1,\r\n      display: \"none\",\r\n      opacity: 0,\r\n      x: -200,\r\n      y: -200,\r\n      scaleX: 0,\r\n      scaleY: 0,\r\n      ease: \"power4.in\",\r\n    });\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (winValue) {\r\n      checkWin(\r\n        winSets,\r\n        gameBoardValue,\r\n        setGameStatValue,\r\n        setGamePlayValue,\r\n        renderWinGrid,\r\n        playerTypeValue\r\n      );\r\n    }\r\n  }, [nextTurnPlayValue, playerNumberValue, winValue]);\r\n  /* eslint-disable */\r\n\r\n  const clickCell = (e) => {\r\n    if (!nextTurnPlayValue || !gamePlayValue) return;\r\n\r\n    const cellId = e.target.id.substr(11);\r\n\r\n    if (gameBoardValue[cellId] || !cellId) return;\r\n\r\n    playerTurn(cellId);\r\n    setNextTurnPlayValue(false);\r\n\r\n    if (gameTypeValue === \"live\") {\r\n      liveCheckTurn();\r\n    } else {\r\n      checkTurn();\r\n    }\r\n  };\r\n\r\n  const liveCheckTurn = () => {\r\n    const result = checkWin(\r\n      winSets,\r\n      gameBoardValue,\r\n      setGameStatValue,\r\n      setGamePlayValue,\r\n      renderWinGrid,\r\n      playerTypeValue\r\n    );\r\n    // console.log(result);\r\n\r\n    if (result[0]) {\r\n      setGameStatValue(\"Opponent Wins\");\r\n      setWinValue(true);\r\n    } else if (result[1]) {\r\n      setGameStatValue(\"Draw\");\r\n      setGamePlayValue(false);\r\n    }\r\n\r\n    simplePost(info.exchangeData, {\r\n      name: nameValue,\r\n      board: gameBoardValue,\r\n      result,\r\n      to: gameRoomValue,\r\n    });\r\n  };\r\n\r\n  const endGame = () => {\r\n    setNameValue(\"\");\r\n    setGameTypeValue(\"\");\r\n    setGameStepValue(\"set_name\");\r\n    setGamePlayValue(false);\r\n    setGameBoardValue({});\r\n    setNextTurnPlayValue(true);\r\n    setGameStatValue(\"\");\r\n    if (gameTypeValue === \"live\") {\r\n      playerSocketValue.close();\r\n      setPlayerSocketValue(null);\r\n      setPlayerNumberValue(0);\r\n      setGameRoomValue(1);\r\n      setWinValue(false);\r\n    }\r\n  };\r\n\r\n  const playerTurn = (cellId) => {\r\n    gameBoardValue[cellId] = playerTypeValue;\r\n\r\n    gsap.from(`#game_board-${cellId}`, {\r\n      duration: 0.3,\r\n      display: \"none\",\r\n      opacity: 0,\r\n      scaleX: 0,\r\n      scaleY: 0,\r\n      ease: \"power4.out\",\r\n    });\r\n  };\r\n\r\n  const compTurn = () => {\r\n    let empty_cells_arr = [];\r\n    for (let i = 1; i <= 9; i++) {\r\n      !gameBoardValue[\"c\" + i] && empty_cells_arr.push(\"c\" + i);\r\n    }\r\n\r\n    const c = rand_arr_elem(empty_cells_arr);\r\n    gameBoardValue[c] = \"o\";\r\n\r\n    gsap.from(`#game_board-${c}`, {\r\n      duration: 0.3,\r\n      display: \"none\",\r\n      opacity: 0,\r\n      scaleX: 0,\r\n      scaleY: 0,\r\n      ease: \"power4.out\",\r\n    });\r\n\r\n    setNextTurnPlayValue(true);\r\n    checkWin(\r\n      winSets,\r\n      gameBoardValue,\r\n      setGameStatValue,\r\n      setGamePlayValue,\r\n      renderWinGrid,\r\n      playerTypeValue\r\n    );\r\n  };\r\n\r\n  const renderWinGrid = (set) => {\r\n    for (let each of set) {\r\n      refsGroup.forEach((r) => {\r\n        if (each === r.current.id.substr(11)) {\r\n          r.current.className += \" win\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const checkTurn = () => {\r\n    const [win, fin] = checkWin(\r\n      winSets,\r\n      gameBoardValue,\r\n      setGameStatValue,\r\n      setGamePlayValue,\r\n      renderWinGrid,\r\n      playerTypeValue\r\n    );\r\n    // console.log(win);\r\n    setTimeout(() => {\r\n      if (!win && !fin) {\r\n        gameTypeValue !== \"live\" && nextTurnPlayValue && compTurn();\r\n      }\r\n    }, 500);\r\n  };\r\n\r\n  const cellCont = (c) => {\r\n    return (\r\n      <div>\r\n        {gameBoardValue[c] === \"x\" && (\r\n          <i className=\"fa fa-times fa-5x player\"></i>\r\n        )}\r\n        {gameBoardValue[c] === \"o\" && (\r\n          <i className=\"fa fa-circle-o fa-5x notplayer\"></i>\r\n        )}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div id=\"GameMain\">\r\n      <h1>Play {gameTypeValue}</h1>\r\n\r\n      <div id=\"game_stat\">\r\n        <div id=\"game_stat_msg\">{gameStatValue}</div>\r\n        {gamePlayValue && (\r\n          <div id=\"game_turn_msg\">\r\n            {nextTurnPlayValue ? \"Your turn\" : \"Opponent turn\"}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div id=\"game_board\">\r\n        <table>\r\n          <tbody>\r\n            <tr>\r\n              <td id=\"game_board-c1\" ref={refsGroup[0]} onClick={clickCell}>\r\n                {\" \"}\r\n                {cellCont(\"c1\")}{\" \"}\r\n              </td>\r\n              <td\r\n                id=\"game_board-c2\"\r\n                ref={refsGroup[1]}\r\n                className=\"vbrd\"\r\n                onClick={clickCell}\r\n              >\r\n                {\" \"}\r\n                {cellCont(\"c2\")}{\" \"}\r\n              </td>\r\n              <td id=\"game_board-c3\" ref={refsGroup[2]} onClick={clickCell}>\r\n                {\" \"}\r\n                {cellCont(\"c3\")}{\" \"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td\r\n                id=\"game_board-c4\"\r\n                ref={refsGroup[3]}\r\n                onClick={clickCell}\r\n                className=\"hbrd\"\r\n              >\r\n                {\" \"}\r\n                {cellCont(\"c4\")}{\" \"}\r\n              </td>\r\n              <td\r\n                id=\"game_board-c5\"\r\n                ref={refsGroup[4]}\r\n                onClick={clickCell}\r\n                className=\"vbrd hbrd\"\r\n              >\r\n                {\" \"}\r\n                {cellCont(\"c5\")}{\" \"}\r\n              </td>\r\n              <td\r\n                id=\"game_board-c6\"\r\n                ref={refsGroup[5]}\r\n                onClick={clickCell}\r\n                className=\"hbrd\"\r\n              >\r\n                {\" \"}\r\n                {cellCont(\"c6\")}{\" \"}\r\n              </td>\r\n            </tr>\r\n            <tr>\r\n              <td id=\"game_board-c7\" ref={refsGroup[6]} onClick={clickCell}>\r\n                {\" \"}\r\n                {cellCont(\"c7\")}{\" \"}\r\n              </td>\r\n              <td\r\n                id=\"game_board-c8\"\r\n                ref={refsGroup[7]}\r\n                onClick={clickCell}\r\n                className=\"vbrd\"\r\n              >\r\n                {\" \"}\r\n                {cellCont(\"c8\")}{\" \"}\r\n              </td>\r\n              <td id=\"game_board-c9\" ref={refsGroup[8]} onClick={clickCell}>\r\n                {\" \"}\r\n                {cellCont(\"c9\")}{\" \"}\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <button type=\"submit\" onClick={endGame} className=\"button\">\r\n        <span>\r\n          End Game <span className=\"fa fa-caret-right\"></span>\r\n        </span>\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default GamePlay;\r\n\r\nexport const checkWin = (\r\n  winSets,\r\n  gameBoardValue,\r\n  setGameStatValue,\r\n  setGamePlayValue,\r\n  renderWinGrid,\r\n  playerTypeValue\r\n) => {\r\n  let set;\r\n  let win = false;\r\n  let fin = true;\r\n  for (let i = 0; !win && i < winSets.length; i++) {\r\n    set = winSets[i];\r\n\r\n    if (\r\n      gameBoardValue[set[0]] &&\r\n      gameBoardValue[set[0]] === gameBoardValue[set[1]] &&\r\n      gameBoardValue[set[0]] === gameBoardValue[set[2]]\r\n    )\r\n      win = true;\r\n  }\r\n\r\n  for (let i = 1; i <= 9; i++) !gameBoardValue[\"c\" + i] && (fin = false);\r\n\r\n  if (win) {\r\n    setGameStatValue(\r\n      (gameBoardValue[set[0]] === playerTypeValue ? \"You\" : \"Opponent\") + \" win\"\r\n    );\r\n    setGamePlayValue(false);\r\n    renderWinGrid(set);\r\n  } else if (fin) {\r\n    setGameStatValue(\"Draw\");\r\n    setGamePlayValue(false);\r\n  }\r\n\r\n  return [win, fin];\r\n};\r\n","import React, { useContext } from \"react\";\r\nimport SetName from \"./SetName\";\r\nimport SetGameType from \"./SetGameType\";\r\nimport GamPlay from \"./GamePlay\";\r\nimport { Context } from \"../../../data/context\";\r\n\r\nconst Game = () => {\r\n  const { name, gameStep } = useContext(Context);\r\n\r\n  const [nameValue] = name;\r\n  const [gameStepValue] = gameStep;\r\n\r\n  //   console.log(gameStepValue, gameBoardValue);\r\n\r\n  return (\r\n    <div id=\"TTT_game\">\r\n      <div id=\"page-container\">\r\n        {gameStepValue === \"set_name\" && (\r\n          <SetName gameStep={gameStep} name={name} />\r\n        )}\r\n\r\n        {gameStepValue !== \"set_name\" && (\r\n          <div>\r\n            <h2>Welcome, {nameValue}</h2>\r\n          </div>\r\n        )}\r\n\r\n        {gameStepValue === \"set_game_type\" && <SetGameType></SetGameType>}\r\n\r\n        {gameStepValue === \"start_game\" && <GamPlay></GamPlay>}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Game;\r\n","// import logo from \"./logo.svg\";\n// import \"./App.css\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Provider, { Consumer } from \"./data/context\";\nimport Header from \"./views/layout/Header\";\nimport Footer from \"./views/layout/Footer\";\nimport MainContent from \"./views/layout/MainContent\";\nimport Home from \"./views/pages/Home\";\nimport Game from \"./views/pages/Game\";\n\nfunction App() {\n  return (\n    <Provider>\n      <Consumer>\n        {(value) => {\n          const { siteContent } = value;\n\n          const [siteContentValue] = siteContent;\n\n          const { data } = siteContentValue;\n\n          // console.log(data);\n\n          if (data === undefined) {\n            return <div className=\"App\"></div>;\n          } else {\n            return (\n              <Router>\n                <div className=\"App\">\n                  <Header\n                    headerContent={data.header}\n                    mainMenu={data.main_menu}\n                  ></Header>\n                  <Switch>\n                    <MainContent>\n                      <Route\n                        exact\n                        path=\"/TicTacToe\"\n                        component={() => (\n                          <Home homeContent={data.pgs[0].home[0]} />\n                        )}\n                      />\n                      <Route exact path=\"/ttt\" component={Game} />\n                      <Route\n                        exact\n                        path=\"/info\"\n                        component={() => (\n                          <Home homeContent={data.pgs[0].info[0]} />\n                        )}\n                      />\n                    </MainContent>\n                  </Switch>\n                  <Footer\n                    footerContent={data.footer}\n                    termsAndConditions={data.pgs[0].terms_and_conditions[0]}\n                    privacy={data.pgs[0].privacy_policy[0]}\n                    contactApi={data.loc[0].SCRIPT__contact_form[0].$.u}\n                  ></Footer>\n                </div>\n              </Router>\n            );\n          }\n        }}\n      </Consumer>\n    </Provider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./sass/main.scss\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}